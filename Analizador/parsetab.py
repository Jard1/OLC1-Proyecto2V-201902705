
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTKN_ORleftTKN_ANDrightUNOTleftTKN_IGUAL_IGUALTKN_DIFERENTETKN_MENORTKN_MENORITKN_MAYORTKN_MAYORIleftTKN_MASTKN_MENOSleftTKN_PORTKN_DIVTKN_MODleftTKN_POTENCIArightUMENOSCADENA CHARACTER DECIMAL ENTERO ID TKN_AND TKN_BOOLEAN TKN_BREAK TKN_CASE TKN_CHAR TKN_COMA TKN_CONTINUE TKN_CORCHETEDER TKN_CORCHETEIZQ TKN_DECREMENTO TKN_DEFAULT TKN_DIFERENTE TKN_DIV TKN_DOSPUNTOS TKN_DOUBLE TKN_ELSE TKN_FALSE TKN_FOR TKN_IF TKN_IGUAL TKN_IGUAL_IGUAL TKN_INCREMENTO TKN_INT TKN_LENGTH TKN_LLAVEDER TKN_LLAVEIZQ TKN_MAIN TKN_MAS TKN_MAYOR TKN_MAYORI TKN_MENOR TKN_MENORI TKN_MENOS TKN_MOD TKN_NEW TKN_NOT TKN_NULL TKN_OR TKN_PARDER TKN_PARIZQ TKN_POR TKN_POTENCIA TKN_PRINT TKN_PTCOMA TKN_PUNTO TKN_READ TKN_RETURN TKN_ROUND TKN_STRING TKN_SWITCH TKN_TOLOWER TKN_TO_UPPER TKN_TRUE TKN_TRUNCATE TKN_TYPE_OF TKN_VAR TKN_VOID TKN_WHILEs  :   instruccionesinstrucciones : instrucciones instruccioninstrucciones    : instruccion\n    finalizacion : TKN_PTCOMA\n                 | \n    \n    instruccion : instPrint finalizacion\n                \n                | declararVar finalizacion\n                | asignacion finalizacion\n                | instIF\n                | instWhile\n                | instBreak finalizacion\n                | instMain\n                | instFor\n                | instSwitch\n                | incrementoDecremento finalizacion\n    instPrint : TKN_PRINT TKN_PARIZQ expresion TKN_PARDERinstMain : TKN_MAIN TKN_PARIZQ TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDER\n    expresion : expresion TKN_MAS expresion\n            | expresion TKN_MENOS expresion\n            | expresion TKN_POR expresion\n            | expresion TKN_DIV expresion\n            | expresion TKN_POTENCIA expresion\n            | expresion TKN_MOD expresion\n            | expresion TKN_IGUAL_IGUAL expresion\n            | expresion TKN_DIFERENTE expresion\n            | expresion TKN_MENOR expresion\n            | expresion TKN_MAYOR expresion\n            | expresion TKN_MENORI expresion\n            | expresion TKN_MAYORI expresion\n            | expresion TKN_OR expresion\n            | expresion TKN_AND expresion\n    \n    expresion : TKN_NOT expresion %prec UNOT\n    \n    expresion : TKN_MENOS expresion %prec UMENOS\n    \n    expresion : TKN_PARIZQ expresion TKN_PARDER\n    expresion : IDexpresion : ENTEROexpresion : DECIMALexpresion : CADENAexpresion : CHARACTERexpresion : TKN_FALSE\n                 | TKN_TRUE\n    expresion : TKN_NULLexpresion : incrementoDecremento incrementoDecremento : ID TKN_INCREMENTOincrementoDecremento : ID TKN_DECREMENTOdeclararVar : TKN_VAR IDdeclararVar : TKN_VAR ID TKN_IGUAL expresionasignacion : ID TKN_IGUAL expresioninstIF : TKN_IF TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDERinstIF : TKN_IF TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDER TKN_ELSE TKN_LLAVEIZQ instrucciones TKN_LLAVEDERinstIF : TKN_IF TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDER TKN_ELSE instIFinstWhile : TKN_WHILE TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDERinstBreak : TKN_BREAKinstFor : TKN_FOR TKN_PARIZQ inicializacionFor TKN_PTCOMA expresion TKN_PTCOMA actualizacionFor TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDER\n    inicializacionFor : asignacion\n                     | declararVar\n    \n    actualizacionFor : incrementoDecremento\n                    | asignacion\n    instSwitch : TKN_SWITCH TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instListaCases TKN_LLAVEDERinstSwitch : TKN_SWITCH TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instListaCases instDefault TKN_LLAVEDERinstSwitch : TKN_SWITCH TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instDefault TKN_LLAVEDERinstListaCases : instListaCases instCaseinstListaCases : instCaseinstCase : TKN_CASE expresion TKN_DOSPUNTOS instruccionesinstDefault : TKN_DEFAULT TKN_DOSPUNTOS instruccionesinstruccion        : error TKN_PTCOMA'
    
_lr_action_items = {'error':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,118,119,124,127,128,132,133,134,135,136,137,138,139,140,141,142,],[14,14,-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,14,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,14,14,14,14,14,-17,-49,-52,-59,-61,14,-60,14,14,14,-51,14,14,14,14,-50,-54,]),'TKN_PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,118,119,124,127,128,132,133,134,135,136,137,138,139,140,141,142,],[15,15,-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,15,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,15,15,15,15,15,-17,-49,-52,-59,-61,15,-60,15,15,15,-51,15,15,15,15,-50,-54,]),'TKN_VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,40,46,47,48,49,50,51,52,53,54,56,66,81,82,83,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,118,119,124,127,128,132,133,134,135,136,137,138,139,140,141,142,],[16,16,-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,16,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,16,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,16,16,16,16,16,-17,-49,-52,-59,-61,16,-60,16,16,16,-51,16,16,16,16,-50,-54,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,20,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,117,118,119,124,127,128,132,133,134,135,136,137,138,139,140,141,142,],[17,17,-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,33,-53,-2,-6,-4,-7,-8,-11,-15,-66,46,-46,46,-44,-45,46,46,63,46,46,46,46,-35,-36,-37,-38,-39,-40,-41,-42,-43,46,-48,-16,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-33,-32,-47,17,46,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,17,17,17,17,17,-17,123,46,-49,-52,-59,-61,17,-60,17,17,17,-51,17,17,17,17,-50,-54,]),'TKN_IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,118,119,124,127,128,130,132,133,134,135,136,137,138,139,140,141,142,],[18,18,-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,18,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,18,18,18,18,18,-17,-49,-52,-59,-61,18,18,-60,18,18,18,-51,18,18,18,18,-50,-54,]),'TKN_WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,118,119,124,127,128,132,133,134,135,136,137,138,139,140,141,142,],[19,19,-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,19,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,19,19,19,19,19,-17,-49,-52,-59,-61,19,-60,19,19,19,-51,19,19,19,19,-50,-54,]),'TKN_BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,118,119,124,127,128,132,133,134,135,136,137,138,139,140,141,142,],[20,20,-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,20,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,20,20,20,20,20,-17,-49,-52,-59,-61,20,-60,20,20,20,-51,20,20,20,20,-50,-54,]),'TKN_MAIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,118,119,124,127,128,132,133,134,135,136,137,138,139,140,141,142,],[21,21,-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,21,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,21,21,21,21,21,-17,-49,-52,-59,-61,21,-60,21,21,21,-51,21,21,21,21,-50,-54,]),'TKN_FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,118,119,124,127,128,132,133,134,135,136,137,138,139,140,141,142,],[22,22,-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,22,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,22,22,22,22,22,-17,-49,-52,-59,-61,22,-60,22,22,22,-51,22,22,22,22,-50,-54,]),'TKN_SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,118,119,124,127,128,132,133,134,135,136,137,138,139,140,141,142,],[23,23,-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,23,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,23,23,23,23,23,-17,-49,-52,-59,-61,23,-60,23,23,23,-51,23,23,23,23,-50,-54,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,118,119,124,127,132,136,141,142,],[0,-1,-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-17,-49,-52,-59,-61,-60,-51,-50,-54,]),'TKN_LLAVEDER':([3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,109,110,111,113,114,115,118,119,124,125,126,127,132,133,136,138,139,140,141,142,],[-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,111,118,119,-17,124,127,-63,-49,-52,-59,132,-62,-61,-60,-65,-51,-64,141,142,-50,-54,]),'TKN_DEFAULT':([3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,111,113,115,118,119,124,126,127,132,136,138,141,142,],[-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,116,-17,116,-63,-49,-52,-59,-62,-61,-60,-51,-64,-50,-54,]),'TKN_CASE':([3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,33,35,36,46,47,48,49,50,51,52,53,54,56,66,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,111,113,115,118,119,124,126,127,132,136,138,141,142,],[-3,-5,-5,-5,-9,-10,-5,-12,-13,-14,-5,-53,-2,-6,-4,-7,-8,-11,-15,-66,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,-16,-33,-32,-47,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,117,-17,117,-63,-49,-52,-59,-62,-61,-60,-51,-64,-50,-54,]),'TKN_PTCOMA':([4,5,6,9,13,14,20,33,35,36,46,47,48,49,50,51,52,53,54,56,60,61,62,66,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,],[26,26,26,26,26,31,-53,-46,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,87,-55,-56,-16,-33,-32,-47,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,112,]),'TKN_PARIZQ':([15,18,19,21,22,23,32,34,37,38,41,42,44,45,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,117,],[32,37,38,39,40,41,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'TKN_IGUAL':([17,33,63,123,],[34,55,34,34,]),'TKN_INCREMENTO':([17,46,123,],[35,35,35,]),'TKN_DECREMENTO':([17,46,123,],[36,36,36,]),'TKN_NOT':([32,34,37,38,41,42,44,45,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,117,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'TKN_MENOS':([32,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,117,129,],[44,44,-44,-45,44,44,44,44,68,44,44,-35,-36,-37,-38,-39,-40,-41,-42,-43,44,68,68,68,68,68,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-33,68,68,44,-34,-18,-19,-20,-21,-22,-23,68,68,68,68,68,68,68,68,68,44,68,]),'ENTERO':([32,34,37,38,41,42,44,45,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,117,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'DECIMAL':([32,34,37,38,41,42,44,45,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,117,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'CADENA':([32,34,37,38,41,42,44,45,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,117,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'CHARACTER':([32,34,37,38,41,42,44,45,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,117,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'TKN_FALSE':([32,34,37,38,41,42,44,45,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,117,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'TKN_TRUE':([32,34,37,38,41,42,44,45,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,117,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'TKN_NULL':([32,34,37,38,41,42,44,45,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,117,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'TKN_PARDER':([35,36,39,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,120,121,122,],[-44,-45,59,66,-35,-36,-37,-38,-39,-40,-41,-42,-43,-48,84,85,88,89,-33,-32,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,131,-57,-58,]),'TKN_MAS':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,67,-35,-36,-37,-38,-39,-40,-41,-42,-43,67,67,67,67,67,-33,67,67,-34,-18,-19,-20,-21,-22,-23,67,67,67,67,67,67,67,67,67,67,]),'TKN_POR':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,69,-35,-36,-37,-38,-39,-40,-41,-42,-43,69,69,69,69,69,-33,69,69,-34,69,69,-20,-21,-22,-23,69,69,69,69,69,69,69,69,69,69,]),'TKN_DIV':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,70,-35,-36,-37,-38,-39,-40,-41,-42,-43,70,70,70,70,70,-33,70,70,-34,70,70,-20,-21,-22,-23,70,70,70,70,70,70,70,70,70,70,]),'TKN_POTENCIA':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,71,-35,-36,-37,-38,-39,-40,-41,-42,-43,71,71,71,71,71,-33,71,71,-34,71,71,71,71,-22,71,71,71,71,71,71,71,71,71,71,71,]),'TKN_MOD':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,72,-35,-36,-37,-38,-39,-40,-41,-42,-43,72,72,72,72,72,-33,72,72,-34,72,72,-20,-21,-22,-23,72,72,72,72,72,72,72,72,72,72,]),'TKN_IGUAL_IGUAL':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,73,-35,-36,-37,-38,-39,-40,-41,-42,-43,73,73,73,73,73,-33,73,73,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,73,73,73,73,]),'TKN_DIFERENTE':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,74,-35,-36,-37,-38,-39,-40,-41,-42,-43,74,74,74,74,74,-33,74,74,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,74,74,74,74,]),'TKN_MENOR':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,75,-35,-36,-37,-38,-39,-40,-41,-42,-43,75,75,75,75,75,-33,75,75,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,75,75,75,75,]),'TKN_MAYOR':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,76,-35,-36,-37,-38,-39,-40,-41,-42,-43,76,76,76,76,76,-33,76,76,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,76,76,76,76,]),'TKN_MENORI':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,77,-35,-36,-37,-38,-39,-40,-41,-42,-43,77,77,77,77,77,-33,77,77,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,77,77,77,77,]),'TKN_MAYORI':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,78,-35,-36,-37,-38,-39,-40,-41,-42,-43,78,78,78,78,78,-33,78,78,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,78,78,78,78,]),'TKN_OR':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,79,-35,-36,-37,-38,-39,-40,-41,-42,-43,79,79,79,79,79,-33,-32,79,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,79,79,]),'TKN_AND':([35,36,43,46,47,48,49,50,51,52,53,54,56,57,58,64,65,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,],[-44,-45,80,-35,-36,-37,-38,-39,-40,-41,-42,-43,80,80,80,80,80,-33,-32,80,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,80,-31,80,80,]),'TKN_DOSPUNTOS':([35,36,46,47,48,49,50,51,52,53,54,81,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,116,129,],[-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-43,-33,-32,-34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,128,134,]),'TKN_LLAVEIZQ':([59,84,85,88,130,131,],[86,104,105,108,135,137,]),'TKN_ELSE':([118,],[130,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'instrucciones':([0,86,104,105,128,134,135,137,],[2,106,109,110,133,138,139,140,]),'instruccion':([0,2,86,104,105,106,109,110,128,133,134,135,137,138,139,140,],[3,24,3,3,3,24,24,24,3,24,3,3,3,24,24,24,]),'instPrint':([0,2,86,104,105,106,109,110,128,133,134,135,137,138,139,140,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declararVar':([0,2,40,86,104,105,106,109,110,128,133,134,135,137,138,139,140,],[5,5,62,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion':([0,2,40,86,104,105,106,109,110,112,128,133,134,135,137,138,139,140,],[6,6,61,6,6,6,6,6,6,122,6,6,6,6,6,6,6,6,]),'instIF':([0,2,86,104,105,106,109,110,128,130,133,134,135,137,138,139,140,],[7,7,7,7,7,7,7,7,7,136,7,7,7,7,7,7,7,]),'instWhile':([0,2,86,104,105,106,109,110,128,133,134,135,137,138,139,140,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'instBreak':([0,2,86,104,105,106,109,110,128,133,134,135,137,138,139,140,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'instMain':([0,2,86,104,105,106,109,110,128,133,134,135,137,138,139,140,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'instFor':([0,2,86,104,105,106,109,110,128,133,134,135,137,138,139,140,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'instSwitch':([0,2,86,104,105,106,109,110,128,133,134,135,137,138,139,140,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'incrementoDecremento':([0,2,32,34,37,38,41,42,44,45,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,87,104,105,106,109,110,112,117,128,133,134,135,137,138,139,140,],[13,13,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,13,54,13,13,13,13,13,121,54,13,13,13,13,13,13,13,13,]),'finalizacion':([4,5,6,9,13,],[25,27,28,29,30,]),'expresion':([32,34,37,38,41,42,44,45,55,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,117,],[43,56,57,58,64,65,81,82,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,129,]),'inicializacionFor':([40,],[60,]),'instListaCases':([108,],[113,]),'instDefault':([108,113,],[114,125,]),'instCase':([108,113,],[115,126,]),'actualizacionFor':([112,],[120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> instrucciones','s',1,'p_s','gramatica.py',225),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_instrucciones_instruccion','gramatica.py',229),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',236),
  ('finalizacion -> TKN_PTCOMA','finalizacion',1,'p_finalizacion','gramatica.py',244),
  ('finalizacion -> <empty>','finalizacion',0,'p_finalizacion','gramatica.py',245),
  ('instruccion -> instPrint finalizacion','instruccion',2,'p_instruccion','gramatica.py',252),
  ('instruccion -> declararVar finalizacion','instruccion',2,'p_instruccion','gramatica.py',254),
  ('instruccion -> asignacion finalizacion','instruccion',2,'p_instruccion','gramatica.py',255),
  ('instruccion -> instIF','instruccion',1,'p_instruccion','gramatica.py',256),
  ('instruccion -> instWhile','instruccion',1,'p_instruccion','gramatica.py',257),
  ('instruccion -> instBreak finalizacion','instruccion',2,'p_instruccion','gramatica.py',258),
  ('instruccion -> instMain','instruccion',1,'p_instruccion','gramatica.py',259),
  ('instruccion -> instFor','instruccion',1,'p_instruccion','gramatica.py',260),
  ('instruccion -> instSwitch','instruccion',1,'p_instruccion','gramatica.py',261),
  ('instruccion -> incrementoDecremento finalizacion','instruccion',2,'p_instruccion','gramatica.py',262),
  ('instPrint -> TKN_PRINT TKN_PARIZQ expresion TKN_PARDER','instPrint',4,'p_instPrint','gramatica.py',270),
  ('instMain -> TKN_MAIN TKN_PARIZQ TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDER','instMain',6,'p_instMain','gramatica.py',275),
  ('expresion -> expresion TKN_MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',284),
  ('expresion -> expresion TKN_MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',285),
  ('expresion -> expresion TKN_POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',286),
  ('expresion -> expresion TKN_DIV expresion','expresion',3,'p_expresion_binaria','gramatica.py',287),
  ('expresion -> expresion TKN_POTENCIA expresion','expresion',3,'p_expresion_binaria','gramatica.py',288),
  ('expresion -> expresion TKN_MOD expresion','expresion',3,'p_expresion_binaria','gramatica.py',289),
  ('expresion -> expresion TKN_IGUAL_IGUAL expresion','expresion',3,'p_expresion_binaria','gramatica.py',290),
  ('expresion -> expresion TKN_DIFERENTE expresion','expresion',3,'p_expresion_binaria','gramatica.py',291),
  ('expresion -> expresion TKN_MENOR expresion','expresion',3,'p_expresion_binaria','gramatica.py',292),
  ('expresion -> expresion TKN_MAYOR expresion','expresion',3,'p_expresion_binaria','gramatica.py',293),
  ('expresion -> expresion TKN_MENORI expresion','expresion',3,'p_expresion_binaria','gramatica.py',294),
  ('expresion -> expresion TKN_MAYORI expresion','expresion',3,'p_expresion_binaria','gramatica.py',295),
  ('expresion -> expresion TKN_OR expresion','expresion',3,'p_expresion_binaria','gramatica.py',296),
  ('expresion -> expresion TKN_AND expresion','expresion',3,'p_expresion_binaria','gramatica.py',297),
  ('expresion -> TKN_NOT expresion','expresion',2,'p_expresion_not','gramatica.py',334),
  ('expresion -> TKN_MENOS expresion','expresion',2,'p_expresion_unaria','gramatica.py',340),
  ('expresion -> TKN_PARIZQ expresion TKN_PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',346),
  ('expresion -> ID','expresion',1,'p_expresion_ID','gramatica.py',353),
  ('expresion -> ENTERO','expresion',1,'p_expresion_ENTERO','gramatica.py',357),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_DECIMAL','gramatica.py',361),
  ('expresion -> CADENA','expresion',1,'p_expresion_CADENA','gramatica.py',365),
  ('expresion -> CHARACTER','expresion',1,'p_expresion_CHARACTER','gramatica.py',369),
  ('expresion -> TKN_FALSE','expresion',1,'p_expresion_boolean','gramatica.py',373),
  ('expresion -> TKN_TRUE','expresion',1,'p_expresion_boolean','gramatica.py',374),
  ('expresion -> TKN_NULL','expresion',1,'p_expresion_null','gramatica.py',379),
  ('expresion -> incrementoDecremento','expresion',1,'p_expresion_incrementoDecremento','gramatica.py',383),
  ('incrementoDecremento -> ID TKN_INCREMENTO','incrementoDecremento',2,'p_incrementoDecrementoMas','gramatica.py',388),
  ('incrementoDecremento -> ID TKN_DECREMENTO','incrementoDecremento',2,'p_incrementoDecrementoNenos','gramatica.py',393),
  ('declararVar -> TKN_VAR ID','declararVar',2,'p_declararVar','gramatica.py',399),
  ('declararVar -> TKN_VAR ID TKN_IGUAL expresion','declararVar',4,'p_declararVarAsignacion','gramatica.py',403),
  ('asignacion -> ID TKN_IGUAL expresion','asignacion',3,'p_asignacion','gramatica.py',410),
  ('instIF -> TKN_IF TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDER','instIF',7,'p_instIF_simple','gramatica.py',416),
  ('instIF -> TKN_IF TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDER TKN_ELSE TKN_LLAVEIZQ instrucciones TKN_LLAVEDER','instIF',11,'p_instIF_else','gramatica.py',420),
  ('instIF -> TKN_IF TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDER TKN_ELSE instIF','instIF',9,'p_instIF_elseIF','gramatica.py',424),
  ('instWhile -> TKN_WHILE TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDER','instWhile',7,'p_instWhile','gramatica.py',429),
  ('instBreak -> TKN_BREAK','instBreak',1,'p_instBreak','gramatica.py',434),
  ('instFor -> TKN_FOR TKN_PARIZQ inicializacionFor TKN_PTCOMA expresion TKN_PTCOMA actualizacionFor TKN_PARDER TKN_LLAVEIZQ instrucciones TKN_LLAVEDER','instFor',11,'p_instFor','gramatica.py',439),
  ('inicializacionFor -> asignacion','inicializacionFor',1,'p_inicializacionFor','gramatica.py',444),
  ('inicializacionFor -> declararVar','inicializacionFor',1,'p_inicializacionFor','gramatica.py',445),
  ('actualizacionFor -> incrementoDecremento','actualizacionFor',1,'p_actualizacionFor','gramatica.py',451),
  ('actualizacionFor -> asignacion','actualizacionFor',1,'p_actualizacionFor','gramatica.py',452),
  ('instSwitch -> TKN_SWITCH TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instListaCases TKN_LLAVEDER','instSwitch',7,'p_instSwitchSimple','gramatica.py',459),
  ('instSwitch -> TKN_SWITCH TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instListaCases instDefault TKN_LLAVEDER','instSwitch',8,'p_instSwitchCompleto','gramatica.py',465),
  ('instSwitch -> TKN_SWITCH TKN_PARIZQ expresion TKN_PARDER TKN_LLAVEIZQ instDefault TKN_LLAVEDER','instSwitch',7,'p_instSwitchSoloDefault','gramatica.py',470),
  ('instListaCases -> instListaCases instCase','instListaCases',2,'p_instSwich_instListaCasos','gramatica.py',475),
  ('instListaCases -> instCase','instListaCases',1,'p_instListaCases_instCase','gramatica.py',482),
  ('instCase -> TKN_CASE expresion TKN_DOSPUNTOS instrucciones','instCase',4,'p_instListaCasos_instCase','gramatica.py',490),
  ('instDefault -> TKN_DEFAULT TKN_DOSPUNTOS instrucciones','instDefault',3,'p_instListaCasos_instDefault','gramatica.py',499),
  ('instruccion -> error TKN_PTCOMA','instruccion',2,'p_instruccion_error','gramatica.py',506),
]
