
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTKN_MASTKN_MENOSleftTKN_PORTKN_DIVTKN_MODleftTKN_POTENCIArightUMENOSleftTKN_IGUAL_IGUALTKN_DIFERENTETKN_MENORTKN_MENORITKN_MAYORTKN_MAYORIrightTKN_NOTleftTKN_ANDleftTKN_ORCADENA DECIMAL ENTERO ID TKN_AND TKN_BOOLEAN TKN_BREAK TKN_CASE TKN_CHAR TKN_COMA TKN_CONTINUE TKN_CORCHETEDER TKN_CORCHETEIZQ TKN_DECREMENTO TKN_DEFAULT TKN_DIFERENTE TKN_DIV TKN_DOSPUNTOS TKN_DOUBLE TKN_ELSE TKN_FALSE TKN_FOR TKN_IF TKN_IGUAL TKN_IGUAL_IGUAL TKN_INCREMENTO TKN_INT TKN_LENGTH TKN_LLAVEDER TKN_LLAVEIZQ TKN_MAIN TKN_MAS TKN_MAYOR TKN_MAYORI TKN_MENOR TKN_MENORI TKN_MENOS TKN_MOD TKN_NEW TKN_NOT TKN_NULL TKN_OR TKN_PARDER TKN_PARIZQ TKN_POR TKN_POTENCIA TKN_PRINT TKN_PTCOMA TKN_PUNTO TKN_READ TKN_RETURN TKN_ROUND TKN_STRING TKN_SWITCH TKN_TOLOWER TKN_TO_UPPER TKN_TRUE TKN_TRUNCATE TKN_TYPE_OF TKN_VOID TKN_WHILEs  :   instruccionesinstrucciones : instrucciones instruccioninstrucciones    : instruccion\n    finalizacion : TKN_PTCOMA\n                 | \n    \n    instruccion : instPrint finalizacion\n                | expresion finalizacion \n    instPrint : TKN_PRINT TKN_PARIZQ expresion TKN_PARDER\n    expresion : expresion TKN_MAS expresion\n            | expresion TKN_MENOS expresion\n            | expresion TKN_POR expresion\n            | expresion TKN_DIV expresion\n    \n    expresion : TKN_MENOS expresion %prec UMENOS\n    \n    expresion : TKN_PARIZQ expresion TKN_PARDER\n    expresion : ENTEROexpresion : DECIMALexpresion : CADENAinstruccion        : error TKN_PTCOMA'
    
_lr_action_items = {'error':([0,2,3,4,5,10,11,12,13,14,15,16,21,24,25,26,27,28,30,31,],[6,6,-3,-5,-5,-15,-16,-17,-2,-6,-4,-7,-18,-13,-9,-10,-11,-12,-14,-8,]),'TKN_PRINT':([0,2,3,4,5,10,11,12,13,14,15,16,21,24,25,26,27,28,30,31,],[7,7,-3,-5,-5,-15,-16,-17,-2,-6,-4,-7,-18,-13,-9,-10,-11,-12,-14,-8,]),'TKN_MENOS':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,],[9,9,-3,-5,18,9,9,-15,-16,-17,-2,-6,-4,-7,9,9,9,9,-18,9,18,-13,-9,-10,-11,-12,18,-14,-8,]),'TKN_PARIZQ':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,30,31,],[8,8,-3,-5,-5,22,8,8,-15,-16,-17,-2,-6,-4,-7,8,8,8,8,-18,8,-13,-9,-10,-11,-12,-14,-8,]),'ENTERO':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,30,31,],[10,10,-3,-5,-5,10,10,-15,-16,-17,-2,-6,-4,-7,10,10,10,10,-18,10,-13,-9,-10,-11,-12,-14,-8,]),'DECIMAL':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,30,31,],[11,11,-3,-5,-5,11,11,-15,-16,-17,-2,-6,-4,-7,11,11,11,11,-18,11,-13,-9,-10,-11,-12,-14,-8,]),'CADENA':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,30,31,],[12,12,-3,-5,-5,12,12,-15,-16,-17,-2,-6,-4,-7,12,12,12,12,-18,12,-13,-9,-10,-11,-12,-14,-8,]),'$end':([1,2,3,4,5,10,11,12,13,14,15,16,21,24,25,26,27,28,30,31,],[0,-1,-3,-5,-5,-15,-16,-17,-2,-6,-4,-7,-18,-13,-9,-10,-11,-12,-14,-8,]),'TKN_PTCOMA':([4,5,6,10,11,12,24,25,26,27,28,30,31,],[15,15,21,-15,-16,-17,-13,-9,-10,-11,-12,-14,-8,]),'TKN_MAS':([5,10,11,12,23,24,25,26,27,28,29,30,],[17,-15,-16,-17,17,-13,-9,-10,-11,-12,17,-14,]),'TKN_POR':([5,10,11,12,23,24,25,26,27,28,29,30,],[19,-15,-16,-17,19,-13,19,19,-11,-12,19,-14,]),'TKN_DIV':([5,10,11,12,23,24,25,26,27,28,29,30,],[20,-15,-16,-17,20,-13,20,20,-11,-12,20,-14,]),'TKN_PARDER':([10,11,12,23,24,25,26,27,28,29,30,],[-15,-16,-17,30,-13,-9,-10,-11,-12,31,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,13,]),'instPrint':([0,2,],[4,4,]),'expresion':([0,2,8,9,17,18,19,20,22,],[5,5,23,24,25,26,27,28,29,]),'finalizacion':([4,5,],[14,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> instrucciones','s',1,'p_s','gramatica.py',195),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_instrucciones_instruccion','gramatica.py',199),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',206),
  ('finalizacion -> TKN_PTCOMA','finalizacion',1,'p_finalizacion','gramatica.py',214),
  ('finalizacion -> <empty>','finalizacion',0,'p_finalizacion','gramatica.py',215),
  ('instruccion -> instPrint finalizacion','instruccion',2,'p_instruccion','gramatica.py',222),
  ('instruccion -> expresion finalizacion','instruccion',2,'p_instruccion','gramatica.py',223),
  ('instPrint -> TKN_PRINT TKN_PARIZQ expresion TKN_PARDER','instPrint',4,'p_instPrint','gramatica.py',229),
  ('expresion -> expresion TKN_MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',235),
  ('expresion -> expresion TKN_MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',236),
  ('expresion -> expresion TKN_POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',237),
  ('expresion -> expresion TKN_DIV expresion','expresion',3,'p_expresion_binaria','gramatica.py',238),
  ('expresion -> TKN_MENOS expresion','expresion',2,'p_expresion_unaria','gramatica.py',247),
  ('expresion -> TKN_PARIZQ expresion TKN_PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',253),
  ('expresion -> ENTERO','expresion',1,'p_expresion_ENTERO','gramatica.py',259),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_DECIMAL','gramatica.py',263),
  ('expresion -> CADENA','expresion',1,'p_expresion_CADENA','gramatica.py',267),
  ('instruccion -> error TKN_PTCOMA','instruccion',2,'p_instruccion_error','gramatica.py',272),
]
